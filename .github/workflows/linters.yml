name: CI

on:
  push:
    paths:
      - '**/*.py'
      - 'poetry.lock'
      - 'pyproject.toml'
      - '.github/workflows/linters.yml'
  pull_request:
    paths:
      - '**/*.py'
      - 'poetry.lock'
      - 'pyproject.toml'
      - '.github/workflows/linters.yml'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          virtualenvs-create: true
          virtualenvs-in-project: false
          virtualenvs-path: ~/my-custom-path
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
            path: .venv
            key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Cache Python dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: pydeps-${{ hashFiles('**/poetry.lock') }}

      - name: Install project
        run: poetry install --no-interaction

      - name: Run Mypy
        run: poetry run mypy .

      - name: Run Black
        run: poetry run black . --check

      - name: Run Ruff
        run: poetry run ruff .
